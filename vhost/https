ssl 模块
指令
ssl 
	相当与对应的listen 443 ssl , listen port ssl 语法 on | off
ssl_certificate  设置pem证书的路径
ssl_certificate_key 设置PEM secret key 文件的路径
ssl_client_ceritificate 设置客户端的PEM ceritificate路径
ssl_dhparam  设置Diffie-Hellman 参数文件的路径
ssl_protocols 指定使用的协议  语法 ssl_protocols [SSLv2] [SSLv3] [TLSv1]
ssl_ciphers  指定使用的密码
ssl_prefer_server_ciphers 指定是否服务器密码优先于客户端密码
ssl_verify_client 开启校验客户端提供的证书
ssl_verify_depth 指定校验客户端证书链的深度
ssl_session_cache  配置用于ssl会话的缓存
ssl_session_timeout 开始ssl 会话功能后，指定使用会话的期限																							













https 模块是通过第三方扩充的模块，因此在配置的时候需要添加http-ssl 模块
先找到编译源文件，然后重新编译，只需要make，不要make install 因为这样会覆盖之前的部署。然后替换nginx的二进制文件

Signature ok
subject=/C=xw/ST=beijing/L=beijing/O=qingniu/OU=qingniu/CN=qingniu/emailAddress=pengzhengrong123@163.com
Getting Private key

Signature ok
subject=/C=ch/ST=beijing/L=beijing/O=qingniu\x08\x1B[3~/OU=qingniu/CN=test1.m.qnsaas.cn/emailAddress=pengzhengrong123@163.com
Getting Private key

----------------------------------------以下为网上资源-------------------------------------------------------------------
默认情况下ssl模块并未被安装，如果要使用该模块则需要在编译时指定–with-http_ssl_module参数，安装模块依赖于OpenSSL库和一些引用文件，通常这些文件并不在同一个软件包中。通常这个文件名类似libssl-dev。

生成证书
可以通过以下步骤生成一个简单的证书：
首先，进入你想创建证书和私钥的目录，例如：

$ cd /usr/local/nginx/conf
创建服务器私钥，命令会让你输入一个口令：test test

$ openssl genrsa -des3 -out server.key 1024
//$ openssl genrsa  -out server.key 1024
创建签名请求的证书（CSR）：test 

$ openssl req -new -key server.key -out server.csr
在加载SSL支持的Nginx并使用上述私钥时除去必须的口令：

// server.csr  server.key

$ cp server.key server.key.org
$ openssl rsa -in server.key.org -out server.key
配置nginx
最后标记证书使用上述私钥和CSR：

$ openssl x509 -req -days 3 -in server.csr -signkey server.key -out server.crt
修改Nginx配置文件，让其包含新标记的证书和私钥：

server {
    server_name YOUR_DOMAINNAME_HERE;
    listen 443;
    ssl on;
    ssl_certificate /etc/nginx/server.crt;
    ssl_certificate_key /etc/nginx/server.key;
}
重启nginx。
这样就可以通过以下方式访问：

https://YOUR_DOMAINNAME_HERE

另外还可以加入如下代码实现80端口重定向到443IT人乐园

server {
listen 80;
server_name ww.centos.bz;
rewrite ^(.*) https://$server_name$1 permanent;
}
