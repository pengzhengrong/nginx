#如果没有定义，那么则以登入的用户
user root root;
#定义保护进程的Pid路径
pid logs/nginx.pid;
#定义worker进程数量为4，默认为1. 设置的参考资源的cpu数量。假定为4核
worker_processes 4 ;
#定义worker进程处理文件的最大数
worker_rlimit_nofile 128 ;
#worker_cpu_affinity 0001 0010 0100 1000 表示worker进程分别受4个CPU的影响。

#配置网络机制
events {
	use epoll;  #启用linux2.6+引擎
	worker_connections 600;  # 最大连接数
	#accept_mutex  on; 默认为on，启用互斥锁打开套接字监听
	#accept_mutex_delay 500ms ; worker再次获取资源之前应该等待的时间
	#multi_accept off ; 是否立刻接受从所有监听队列进入的连接
}

http{
		keepalive_timeout time1 [time2]; #定义keep-alive 的时长
		sendfile on; # 默认off ，那么Nginx将自己处理文件传递。 on 使用sendfile 内核来调用处理文件传递
		tcp_nopush on; # 默认off ，on 则尝试在单个TCP数据包中发送整个HTTP响应头
		#tcp_nodelay on; 默认on，唯一目的就是禁止使用Nagle的缓冲算法。场合：应用程序经常发送小的数据包，而不立即获得响应。
		
		#这个设置会影响响应数据包HTTP头中的Content-Type
		include       mime.types;
		#Nginx提供一个文件的时候，先于MIME文件进行对比，如果找不到那么使用默认的type作为响应头
		default_type  application/octet-stream;
		
		log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for" "$request_time"';
		
	    
		#fastcgi_ignore_client_abort on;
	    fastcgi_connect_timeout 60;
	    fastcgi_send_timeout 60;
	    fastcgi_read_timeout 60;
	    fastcgi_buffer_size 64k;
	    fastcgi_buffers 4 64k;
	    fastcgi_busy_buffers_size 128k;
	    fastcgi_temp_file_write_size 128k;
	
	    gzip off;
	    gzip_min_length  1k;
	    gzip_buffers     4 16k;
	    gzip_http_version 1.0;
	    gzip_comp_level 2;
	    gzip_types       text/plain application/x-javascript text/css application/xml;
	    gzip_vary on;
	
	    #proxy_intercept_errors on;
	    #proxy_ignore_client_abort on;
	    #proxy_connect_timeout 5;
	    #proxy_read_timeout 60;
	    #proxy_send_timeout 5;
	    #proxy_buffer_size 16k;
	    #proxy_buffers 4 64k;
	    #proxy_busy_buffers_size 128k;
	    #proxy_temp_file_write_size 128k;
	    #fastcgi_temp_path /home/xuanwen/fastcgi_temp_path; 
	    #fastcgi_cache_path /home/xuanwen/fastcgi_cache_path levels=1:2 keys_zone=cache_xw:200m inactive=7d max_size=30g;
		
	server{
		listen [address][:port] [其他选项(default,ssl)] ;
		server_name iit.com iit.cn ;
		root /home/git/iit/;
		index index.php index.html index.jsp;
	}
}